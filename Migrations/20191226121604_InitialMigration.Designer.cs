// <auto-generated />
using Citizens.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Citizens.Migrations
{
    [DbContext(typeof(CitizenContext))]
    [Migration("20191226121604_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Citizens.Models.CitizenEducationDetails", b =>
                {
                    b.Property<int>("CitizenID")
                        .HasColumnType("int");

                    b.Property<string>("EducationBoard")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EducationSpecialization")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("YearOfPassing")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CitizenID");

                    b.ToTable("CitizenEducationDetails");
                });

            modelBuilder.Entity("Citizens.Models.CitizenMedicalHistory", b =>
                {
                    b.Property<int>("CitizenID")
                        .HasColumnType("int");

                    b.Property<string>("CauseOfVisit")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DateOfVisit")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MedDeptID")
                        .HasColumnType("int");

                    b.Property<int>("MedicalCenterID")
                        .HasColumnType("int");

                    b.Property<string>("Prescription")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CitizenID");

                    b.ToTable("CitizenMedicalHistory");
                });

            modelBuilder.Entity("Citizens.Models.CitizenPersonalDetail", b =>
                {
                    b.Property<int>("AADHARID")
                        .HasColumnType("int")
                        .HasMaxLength(16);

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("OtherPhone")
                        .HasColumnType("int");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<int>("PrimaryPhone")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AADHARID");

                    b.ToTable("CitizenPersonalDetail");
                });

            modelBuilder.Entity("Citizens.Models.CountryMedicalCenters", b =>
                {
                    b.Property<int>("MedicalCenterID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.HasKey("MedicalCenterID");

                    b.ToTable("CountryMedicalCenters");
                });

            modelBuilder.Entity("Citizens.Models.CountryMedicalDepartments", b =>
                {
                    b.Property<int>("MedicalDeptID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DepatmentName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MedicalDeptID");

                    b.ToTable("CountryMedicalDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
